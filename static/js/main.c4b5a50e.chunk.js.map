{"version":3,"sources":["components/Filter/Filter.module.css","components/PhonebookItem/BookItem.module.css","components/Container/Container.module.css","components/Container/Container.js","redux/types.js","redux/actions.js","components/ContactForm/InputForm.js","components/Filter/Filter.js","components/PhonebookItem/PhoneBookItem.js","components/PhonebookList/PhonebookList.js","App.js","redux/reducer.js","redux/store.js","index.js","components/ContactForm/InputForm.module.css"],"names":["module","exports","Container","children","className","s","container","addContact","createAction","types","data","payload","id","uuidv4","name","number","deleteItem","changeFilter","connect","dispatch","onFormSubmit","contactAction","useState","setName","setNumber","contactId","useRef","inputValue","e","target","value","formReset","inputContainer","form","onSubmit","preventDefault","formItem","type","pattern","title","required","onChange","button","state","contacts","filter","onChangeFilter","filterAction","currentTarget","inputFilter","PhoneListItem","onDeleteList","list","onClick","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","items","map","PhoneBookItem","App","createReducer","action","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4b5a50e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2rwPA\",\"inputFilter\":\"Filter_inputFilter__1j3mW\",\"title\":\"Filter_title__27H4s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"BookItem_list__3Kk6f\",\"button\":\"BookItem_button__1zHHz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__20sWZ\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nconst Container = ({ children }) => {\n  return <div className={s.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    ADD_NAME: 'inputForm/Name',\r\n    ADD_NUMBER: 'inputForm/Number',\r\n    ADD_CONTACT: 'contact/addContact',\r\n    FORM_RESET: 'inputForm/Reset',\r\n    FORM_SUBMIT: 'inputForm/Submit',\r\n    DELETE_ITEM: 'contact/delete',\r\n    CHANGE_FILTER: 'filter/change',\r\n    GET_VISIBLE_CONTACTS: 'contactList/getContacts',\r\n};\r\n\r\n// const ADD_NAME = 'inputForm/Name';\r\n// const ADD_NUMBER = 'inputForm/Number';\r\n// const ADD_CONTACT = 'contact/addContact';\r\n// const FORM_RESET = 'inputForm/Reset';\r\n// const FORM_SUBMIT = 'inputForm/Submit';\r\n// const DELETE_ITEM = 'contact/delete';\r\n// const CHANGE_FILTER = 'filter/change';\r\n// const GET_VISIBLE_CONTACTS = 'contactList/getContacts';\r\n\r\n\r\n// export default { ADD_CONTACT, DELETE_ITEM, CHANGE_FILTER};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport types from './types';\r\n\r\nconst addContact = createAction(types.ADD_CONTACT, data => {\r\n    return {\r\n        payload: {\r\n            id: uuidv4(),\r\n            name: data.name,\r\n            number: data.number,\r\n          }\r\n    }\r\n})\r\n\r\nconst deleteItem = createAction(types.DELETE_ITEM);\r\n\r\nconst changeFilter = createAction(types.CHANGE_FILTER);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteItem, changeFilter };\r\n\r\n// const addContact = data => ({\r\n//         type: types.ADD_CONTACT,\r\n//         // payload: data,\r\n//         payload: {\r\n//           id: uuidv4(),\r\n//           name: data.name,\r\n//           number: data.number,\r\n//         }\r\n//     }\r\n// )\r\n\r\n// const deleteItem = listId => ({\r\n//     type: types.DELETE_ITEM,\r\n//     payload: listId,\r\n// })\r\n\r\n// const changeFilter = value => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value,\r\n// })\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\n// export default { addContact, deleteItem };","// import React, { Component } from \"react\";\nimport { useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport contactAction from \"../../redux/actions\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport s from \"./InputForm.module.css\";\n\n function Input({ onFormSubmit }) {\n  \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contactId = useRef(uuidv4());\n\n   const inputValue = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n        case 'number':\n          setNumber(value);\n          break;\n\n            default:\n              return;\n    }\n  };\n\n   const addContact = (e) => {\n    e.preventDefault();\n    // const { name, number } = e.target;\n\n    onFormSubmit({ name: name, number: number, contactId: contactId});\n    \n    formReset();\n  };\n\n  // const newContact = contacts.some((contact) => contact.name === data.name);\n  // if (newContact) {\n  //   alert(`${data.name} is already in contacts`);\n  //   return;\n  // }\n\n   const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <div className={s.inputContainer}>\n        <form className={s.form} onSubmit={addContact}>\n          <label className={s.formItem}>\n            Name{\" \"}\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={name}\n              onChange={inputValue}\n            />\n          </label>\n          <label className={s.formItem}>\n            Number{\" \"}\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={number}\n              onChange={inputValue}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n}\n\n// const newContact = contacts.some((contact) => contact.name === data.name);\n// if (newContact) {\n//   alert(`${data.name} is already in contacts`);\n//   return;\n// }\n\n\nconst mapDispatchToProps = dispatch => ({\n \n  onFormSubmit: data => dispatch(contactAction.addContact(data)), \n})\n  \nexport default connect(null, mapDispatchToProps)(Input);\n\nInput.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport filterAction from \"../../redux/actions\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <label className={s.filter}>\n      <p className={s.title}>Find contacts by name </p>\n\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeFilter: e => dispatch(filterAction.changeFilter(e.currentTarget.value)),\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./BookItem.module.css\";\n\nconst PhoneListItem = ({ id, name, number, onDeleteList }) => {\n  return (\n    <li className={s.list} key={id}>\n      <p>{name}:</p>\n      <p>{number}</p>\n      <button className={s.button} onClick={() => onDeleteList(id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nPhoneListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n};\n\nexport default PhoneListItem;\n","import React from \"react\";\nimport { connect } from 'react-redux';\nimport  deleteItem  from '../../redux/actions';\nimport PhoneBookItem from \"../PhonebookItem/PhoneBookItem\";\nimport PropTypes from \"prop-types\";\n\n// import s from \"./PhonebookList.module.css\";\n\nconst PhonebookList = ({ contacts, title, onDeleteList }) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <PhoneBookItem\n            key={id}\n            name={name}\n            number={number}\n            onDeleteList={() => onDeleteList(id)}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\nconst getVisibleContacts = (contacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n\nconst mapStateToProps = (state) => {\n const { filter, items } = state.contacts;\n const visibleContacts = getVisibleContacts(items, filter);\n\n return {\n  contacts: visibleContacts,\n }\n}\n  \nconst mapDispatchToProps = dispatch => ({\n  onDeleteList: (id) => dispatch(deleteItem.deleteItem(id))\n})\n\nPhonebookList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string.isRequired,\n  onDeleteList: PropTypes.func.isRequired,\n};\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(PhonebookList);\n","// import React, { Component } from \"react\";\n// import { useState } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import * as actions from '../../redux/actions'\nimport Container from \"./components/Container/Container\";\nimport Input from \"./components/ContactForm/InputForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport PhonebookList from \"./components/PhonebookList/PhonebookList\";\n// import useLocalStorage from './hooks/useLocalStorage';\n\n\n  function App() {\n\n  //  const [contacts, setContacts] = useLocalStorage('contacts', []);\n  // const [filter, setFilter] = useState('');\n  \n  /*  \n   const formSubmit = (data) => {\n    console.log(data);\n   \n    const newContact = contacts.some((contact) => contact.name === data.name);\n    if (newContact) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n\n    const contactData = {\n      id: uuidv4(),\n      name: data.name,\n      number: data.number,\n    };\n\n    setContacts((prevState) => [...prevState, contactData]);\n  };\n   */ \n\n  //  const deleteItem = listId => {\n  //   setContacts(state => state.filter(contact => contact.id !== listId))\n  // };\n\n  //  const changeFilter = e => {\n  //   setFilter(e.currentTarget.value);\n  // };\n\n  //  const getVisibleContacts = () => {\n  //   // const { filter, contacts } = this.state;\n  //   const normalizedFilter = filter.toLowerCase();\n\n  //   return contacts.filter((contact) =>\n  //     contact.name.toLowerCase().includes(normalizedFilter)\n  //   );\n  // };\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Input  /*onFormSubmit={formSubmit}*/ />\n        <Filter \n        /*value={filter} onChangeFilter={changeFilter}*/ \n          />\n        <PhonebookList\n          // contacts={getVisibleContacts()}\n          title=\"Contacts\"\n          // onDeleteList={deleteItem}\n        />\n      </Container>\n    );\n}\n\n\nexport default App;\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport types from './types';\r\n\r\nconst items = createReducer([], {\r\n    'contact/addContact': (state, action) => [...state, action.payload],\r\n    'contact/delete': (state, action) => \r\n    state.filter(contact => contact.id !== action.payload)\r\n});\r\n\r\n//   const items = (state = [], { type, payload }) => {\r\n//       switch (type) {\r\n//           case types.ADD_CONTACT:\r\n//               return [...state, payload ];\r\n\r\n//               case types.DELETE_ITEM:\r\n//                   return state.filter(contact => contact.id !== payload);\r\n\r\n//               default:\r\n//                   return state;\r\n//       }\r\n//   }\r\n\r\n  const filter = (state = '', { type, payload }) => {\r\n    switch(type) {\r\n        case types.CHANGE_FILTER:\r\n            return payload;\r\n\r\n            default:\r\n                return state;\r\n    }\r\n}\r\n\r\n// const addContactsReducer = (state = [], { type, payload }) => {\r\n//     if(type === types.ADD_CONTACT) {\r\n//         return [...state, payload];\r\n// }\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter\r\n})","// import { combineReducers } from \"redux\";\r\nimport { configureStore,getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from \"./reducer\";\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger]\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactsReducer, \r\n// })\r\n\r\n    //  contacts  {\r\n    //   items: [],\r\n    //   filter: '',\r\n    // }\r\n  \r\nconst store = configureStore({\r\n    reducer: {\r\n      contacts: contactsReducer, \r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"InputForm_inputContainer__1zJik\",\"form\":\"InputForm_form__16T5g\",\"formItem\":\"InputForm_formItem__3kYT5\",\"button\":\"InputForm_button__22GhW\"};"],"sourceRoot":""}